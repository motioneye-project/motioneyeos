diff --git a/Makefile b/Makefile
index e69de29..f337374 100644
--- a/Makefile
+++ b/Makefile
@@ -0,0 +1,145 @@
+ALL_PROGS = v4l2copy v4l2source_yuv
+PREFIX?=/usr
+DESTDIR?=$(PREFIX)/bin
+CC?=$(CROSS)gcc
+CXX?=$(CROSS)g++
+CXXFLAGS += -W -Wall -g -O3 -D_POSIX_C_SOURCE=2
+CXXFLAGS += -Iinclude -I$(PREFIX)/include -I$(PREFIX)/include/libv4l2cpp
+CXXFLAGS += $(EXTRA_CXXFLAGS)
+LDFLAGS += -pthread -L$(PREFIX)/lib -lv4l2wrapper
+
+.DEFAULT_GOAL := all
+
+# raspberry tools
+ifneq ($(HAVE_RPI_IL),)
+ILCFLAGS  = $(CXXFLAGS)
+ILCFLAGS += -DOMX_SKIP64BIT
+ILLDFLAGS = $(LDFLAGS) -lpthread -lopenmaxil -lbcm_host -lvcos -lvchostif -lvchiq_arm -lilclient
+
+v4l2compress_omx: src/encode_omx.cpp src/v4l2compress_omx.cpp
+	$(CXX) -o $@ $^ -DHAVE_LIBBCM_HOST -DUSE_EXTERNAL_LIBBCM_HOST -DUSE_VCHIQ_ARM -Wno-psabi $(ILCFLAGS) $(ILLDFLAGS)
+
+v4l2grab_h264: src/encode_omx.cpp src/v4l2grab_h264.cpp
+	$(CXX) -o $@ $^ -DHAVE_LIBBCM_HOST -DUSE_EXTERNAL_LIBBCM_HOST -DUSE_VCHIQ_ARM -Wno-psabi $(ILCFLAGS) $(ILLDFLAGS)
+
+v4l2display_h264: src/v4l2display_h264.cpp
+	$(CXX) -o $@ $^ -DHAVE_LIBBCM_HOST -DUSE_EXTERNAL_LIBBCM_HOST -DUSE_VCHIQ_ARM -Wno-psabi $(ILCFLAGS) $(ILLDFLAGS)
+
+
+ALL_PROGS+=v4l2grab_h264
+ALL_PROGS+=v4l2display_h264
+ALL_PROGS+=v4l2compress_omx
+endif
+
+ifneq ($(HAVE_RPI),)
+MMALCAM_CFLAGS  = $(CXXFLAGS)
+MMALCAM_LDFLAGS = $(LDFLAGS) -L/opt/vc/lib -lmmal -lmmal_core -lmmal_util -lpthread -lbcm_host -lvcos -lvchostif -lvchiq_arm
+RASPICAM_CFLAGS = $(CFLAGS) -Isrc/raspicam -I/opt/vc/include
+RASPICAM_OBJS = \
+	src/raspicam/RaspiCamControl.o \
+	src/raspicam/RaspiCLI.o \
+	src/raspicam/RaspiCommonSettings.o \
+	src/raspicam/RaspiHelpers.o \
+	src/raspicam/RaspiPreview.o
+
+
+src/raspicam/%.o : src/raspicam/%.c
+	$(CC) -DHAVE_LIBBCM_HOST -DUSE_EXTERNAL_LIBBCM_HOST -DUSE_VCHIQ_ARM -Wno-psabi $(RASPICAM_CFLAGS) -c $< -o $@
+
+
+endif
+
+# libyuv
+ifneq ($(HAVE_LIBYUV),)
+ALL_PROGS+=v4l2convert_yuv
+
+# libh264bitstream & libhevcbitstream
+ifneq ($(HAVE_H264BITSTREAM),)
+ifneq ($(HAVE_HEVCBITSTREAM),)
+ALL_PROGS+=v4l2dump
+endif
+endif
+
+# libh264bitstream
+ifneq ($(HAVE_H264BITSTREAM),)
+ALL_PROGS+=v4l2compress_h264
+endif
+
+# libhevcbitstream
+ifneq ($(HAVE_HEVCBITSTREAM),)
+ALL_PROGS+=v4l2compress_x265
+endif
+
+# libvpx
+ifneq ($(HAVE_LIBVPX),)
+ALL_PROGS+=v4l2compress_vpx
+endif
+
+# libjpeg
+ifneq ($(HAVE_LIBJPEG),)
+ALL_PROGS+=v4l2compress_jpeg v4l2uncompress_jpeg
+CFLAGS += -DHAVE_JPEG
+endif
+
+endif
+
+# libfuse
+ifneq ($(HAVE_LIBFUSE),)
+ALL_PROGS+=v4l2fuse
+endif
+
+all: $(ALL_PROGS)
+
+# read V4L2 capture -> write V4L2 output
+v4l2copy: src/v4l2copy.cpp
+	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
+
+# read V4L2 capture -> convert YUV format -> write V4L2 output
+v4l2convert_yuv: src/v4l2convert_yuv.cpp
+	$(CXX) -o $@ $(CXXFLAGS) -I$(PREFIX)/include/libyuv $^ $(LDFLAGS) -lyuv -ljpeg
+
+# -> write V4L2 output
+v4l2source_yuv: src/v4l2source_yuv.cpp
+	$(CXX) -o $@ $(CXXFLAGS) $^ $(LDFLAGS)
+
+# read V4L2 capture -> compress using libvpx -> write V4L2 output
+v4l2compress_vpx: src/v4l2compress_vpx.cpp
+	$(CXX) -o $@ $(CXXFLAGS) -I$(PREFIX)/include/libyuv $^ $(LDFLAGS) -lvpx -lyuv -ljpeg
+
+# read V4L2 capture -> compress using x264 -> write V4L2 output
+v4l2compress_h264: src/v4l2compress_h264.cpp
+	$(CXX) -o $@ $(CXXFLAGS) -I$(PREFIX)/include/libyuv $^ $(LDFLAGS) -lh264bitstream -lyuv -ljpeg
+
+# read V4L2 capture -> compress using x265 -> write V4L2 output
+v4l2compress_x265: src/v4l2compress_x265.cpp
+	$(CXX) -o $@ $(CXXFLAGS) -I$(PREFIX)/include/libyuv $^ $(LDFLAGS) -lhevcbitstream -lyuv -ljpeg
+
+# read V4L2 capture -> compress using libjpeg -> write V4L2 output
+v4l2compress_jpeg: src/v4l2compress_jpeg.cpp
+	$(CXX) -o $@ $(CXXFLAGS) -I$(PREFIX)/include/libyuv $^ $(LDFLAGS) -lyuv -ljpeg
+
+# read V4L2 capture -> uncompress using libjpeg -> write V4L2 output
+v4l2uncompress_jpeg: src/v4l2uncompress_jpeg.cpp
+	$(CXX) -o $@ $(CXXFLAGS) -I$(PREFIX)/include/libyuv $^ $(LDFLAGS) -lyuv -ljpeg
+
+# try with opencv
+v4l2detect_yuv: src/v4l2detect_yuv.cpp
+	$(CXX) -o $@ $(CXXFLAGS) -I$(PREFIX)/include/libyuv $^ $(LDFLAGS) -lopencv_core -lopencv_objdetect -lopencv_imgproc -lyuv -ljpeg
+
+# dump
+v4l2dump: src/v4l2dump.cpp
+	$(CXX) -o $@ $(CXXFLAGS) -I$(PREFIX)/include/h264bitstream -I$(PREFIX)/include/hevcbitstream -I$(PREFIX)/include/libyuv $^ $(LDFLAGS) -lh264bitstream -lhevcbitstream -lyuv -ljpeg
+
+v4l2fuse: src/v4l2fuse.c
+	$(CC) -o $@ $(CFLAGS) $^ $(LDFLAGS) -D_FILE_OFFSET_BITS=64 -lfuse
+
+
+upgrade:
+	git submodule foreach git pull origin master
+
+install: all
+	mkdir -p $(DESTDIR)/bin
+	install -D -m 0755 $(ALL_PROGS) $(DESTDIR)/bin
+
+clean:
+	-@$(RM) $(ALL_PROGS) .*o *.a src/raspicam/.*o
